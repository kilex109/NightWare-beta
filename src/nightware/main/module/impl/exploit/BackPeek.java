package nightware.main.module.impl.exploit;

import com.darkmagician6.eventapi.EventTarget;
import nightware.main.NightWare;
import nightware.main.event.player.EventSwingArm;
import nightware.main.event.player.EventUpdate;
import nightware.main.event.render.EventRender3D;
import nightware.main.module.Category;
import nightware.main.module.Module;
import nightware.main.module.ModuleAnnotation;
import nightware.main.module.setting.impl.BooleanSetting;
import nightware.main.module.setting.impl.ModeSetting;
import nightware.main.module.setting.impl.NumberSetting;
import nightware.main.utility.render.ColorUtility;
import nightware.main.utility.render.RenderUtility;
import net.minecraft.util.EnumHand;
import net.minecraft.util.math.Vec3d;

@ModuleAnnotation(
        name = "BackPeek",
        category = Category.EXPLOIT
)
public class BackPeek extends Module {
    public Vec3d pos;
    public double motionX;
    public double motionZ;
    boolean teleport = false;

    public static BooleanSetting timer = new BooleanSetting("Ускорение", true);
    public static NumberSetting timerPower = new NumberSetting("Сила ускорения", 0.6F, 0.1F, 2.0F, 0.1F);
    public static ModeSetting mode = new ModeSetting("Режим", "Выстрел", "Выстрел", "Дистанция");
    public static NumberSetting radius = new NumberSetting("Дистанция", 1.5F, 0.5F, 5.0F, 0.1F);

    public BackPeek() {
        timerPower.setVisible(() -> timer.get());
        radius.setVisible(() -> mode.is("Дистанция"));
    }

    @EventTarget
    public void onSwing(EventSwingArm event) {
        if (mode.is("Выстрел")){
            if (event.getHand() == EnumHand.MAIN_HAND){
                teleport = true;
            }
        }

    }

    @EventTarget
    public void render3D(EventRender3D event){
        int color = NightWare.getInstance().getC(0).getRGB();
        int color2 = NightWare.getInstance().getC(500).getRGB();
        int middleColor = ColorUtility.interpolateColorC(color, color2, 0.5F).getRGB();
        RenderUtility.drawCircle3D(pos.xCoord, pos.yCoord, pos.zCoord, mode.is("Дистанция") ? radius.get() : 0.3f, middleColor);
    }


    @EventTarget
    public void onUpdate(EventUpdate event) {

        if (mc.player.getDistance(pos.xCoord, pos.yCoord, pos.zCoord) > radius.get() && mode.is("Дистанция")) {
            teleport = true;
        }
        if (teleport) {
            if (timer.get()) {
                mc.timer.field_194147_b = timerPower.get();
            }
            double distance = mc.player.getDistance(pos.xCoord, pos.yCoord, pos.zCoord);
            if (distance != 0) {
                mc.player.motionX = -(mc.player.posX - pos.xCoord) / distance * 0.3f;
                mc.player.motionZ = -(mc.player.posZ - pos.zCoord) / distance * 0.3f;
            }

            if (distance <= 0.3f) {
                //setEnabled(false);
                //pos = new Vec3d(mc.player.posX, mc.player.posY, mc.player.posZ);
                teleport = false;
            }
        }
    }



    @Override
    public void onEnable() {
        super.onEnable();
        pos = new Vec3d(mc.player.posX, mc.player.posY, mc.player.posZ);
        teleport = false;
    }

    @Override
    public void onDisable() {
        super.onDisable();
        teleport = false;
    }
}

