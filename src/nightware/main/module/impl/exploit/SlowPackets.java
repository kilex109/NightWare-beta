package nightware.main.module.impl.exploit;

import com.darkmagician6.eventapi.EventTarget;
import com.mojang.authlib.GameProfile;
import nightware.main.event.packet.EventSendPacket;
import nightware.main.event.player.EventUpdate;
import nightware.main.module.Category;
import nightware.main.module.Module;
import nightware.main.module.ModuleAnnotation;
import nightware.main.module.impl.combat.TimerUtils;
import nightware.main.module.setting.impl.NumberSetting;
import nightware.main.utility.math.MathUtility;
import net.minecraft.client.entity.EntityOtherPlayerMP;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketAnimation;
import net.minecraft.util.math.Vec3d;

import java.util.ArrayList;
import java.util.UUID;

@ModuleAnnotation(
        name = "SlowPackets",
        category = Category.EXPLOIT
)
public class SlowPackets extends Module {
    public static NumberSetting cooldown = new NumberSetting("Задержка", 50, 10, 250, 10);

    float ticks = 3;
    TimerUtils timer = new TimerUtils();
    int state = 0;
    ArrayList<Packet> packets = new ArrayList<>();
    Vec3d pos = new Vec3d(0, 0, 0);
    public EntityPlayer player;

    public void setMotion(double speed, float pseudoYaw, double aa, double po4) {
        double forward = po4;
        double strafe = aa;
        float yaw = pseudoYaw;
        if (po4 != 0.0) {
            if (aa > 0.0) {
                yaw = pseudoYaw + (float) (po4 > 0.0 ? -45 : 45);
            } else if (aa < 0.0) {
                yaw = pseudoYaw + (float) (po4 > 0.0 ? 45 : -45);
            }
            strafe = 0.0;
            if (po4 > 0.0) {
                forward = 1.0;
            } else if (po4 < 0.0) {
                forward = -1.0;
            }
        }
        if (strafe > 0.0) {
            strafe = 1.0;
        } else if (strafe < 0.0) {
            strafe = -1.0;
        }
        double kak = Math.cos(Math.toRadians(yaw + 90.0f));
        double nety = Math.sin(Math.toRadians(yaw + 90.0f));
        player.motionX = (forward * speed * kak + strafe * speed * nety);
        player.motionZ = (forward * speed * nety - strafe * speed * kak);

    }

    public static int direction;
    float range = 0.2f;


    @EventTarget
    public void onUpdate(EventUpdate event) {
        mc.player.noClip = true;
        boolean can = true;
        if (mc.currentScreen != null) {
            state = 0;
        }
        if (timer.hasReached(((long) ticks * cooldown.getInt()))) {
            state = 0;
            timer.reset();
            ticks = MathUtility.getRandomInRange(10, 5);
        }
        if (state == 0) {
            for (Packet packet : packets) {
                mc.getConnection().sendPacket(packet);
            }
            packets.clear();
            state = 1;
            player.setPosition(mc.player.posX, mc.player.posY, mc.player.posZ);
            pos = new Vec3d(mc.player.posX, mc.player.posY, mc.player.posZ);
        }
        mc.player.noClip = true;
    }

    @EventTarget
    public void sendPacket(EventSendPacket event) {
        boolean can = true;
        if (mc.player != null && state == 1 && !(event.getPacket() instanceof CPacketAnimation)) {
            packets.add(event.getPacket());
            event.setCancelled(true);
        }
    }



    @Override
    public void onDisable() {
        super.onDisable();
        for (Packet packet : packets) {
            mc.getConnection().sendPacket(packet);
        }
        if (player != null && mc.world != null) {
            mc.world.removeEntityFromWorld(-7777);
            player = null;
        }
        packets.clear();
    }

    @Override
    public void onEnable() {
        super.onEnable();
        if (mc.world != null && mc.player != null) {
            player = new EntityOtherPlayerMP(mc.world, new GameProfile(UUID.fromString("6714531a-1c69-438e-b7d6-d6d41ca6838b"), "BOT"));
            player.copyLocationAndAnglesFrom(mc.player);
            player.inventory.copyInventory(mc.player.inventory);
            mc.world.addEntityToWorld(-7777, player);
        } else {
            setToggled(false);
        }
    }
}

